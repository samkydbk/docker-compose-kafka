version: '3'

networks:
  net-kafka:
    external: true

services:
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    privileged: true
    restart: always
    networks:
      net-kafka:
        ipv4_address: 172.18.0.20
    ports:
      - "2181:2181"
    volumes:
      - /docker/kafka/single/zookeeper/conf:/conf
      - /docker/kafka/single/zookeeper/data:/data
      - /docker/kafka/single/zookeeper/datalog:/datalog

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    container_name: kafka
    privileged: true
    restart: always
    networks:
      net-kafka:
        ipv4_address: 172.18.0.21
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://47.75.179.175:9092
      KAFKA_ADVERTISED_HOST_NAME: 47.75.179.175
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /docker/kafka/single/kafka/docker.sock:/var/run/docker.sock
      - /docker/kafka/single/kafka/data/:/kafka
    depends_on:
      - zookeeper

  kafka-manager:
    image: sheepkiller/kafka-manager
    container_name: kafka-manager
    hostname: kafka-manager
    privileged: true
    networks:
      net-kafka:
        ipv4_address: 172.18.0.22
    ports:
      - "9099:9000"
    depends_on:            # 连接本compose文件创建的container
      - zookeeper
      - kafka
    # external_links:   # 连接compose以外的container
    environment:
      ZK_HOSTS: zookeeper:2181
      KAFKA_BROKERS: kafka:9092
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true

